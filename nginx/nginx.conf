#user  nobody;
#Defines which Linux system user will own and run the Nginx server

worker_processes 4;

events {
	worker_connections 1024;
}

http {
	include       mime.types;
  default_type  application/octet-stream;

	sendfile        on;
  keepalive_timeout  65;

	upstream authorization-app {
		least_conn;
	  server authorization:5000 weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
	  listen 443 ssl;
		# TODO: This should really read a environmental variable
	  server_name api.fjakkarin.com;

		# TODO: This should really read a environmental variable
	  ssl_certificate /etc/letsencrypt/live/api.fjakkarin.com/fullchain.pem;
		# TODO: This should really read a environmental variable
	  ssl_certificate_key /etc/letsencrypt/live/api.fjakkarin.com/privkey.pem;

		# For more information see https://www.chosenplaintext.ca/articles/why-hsts.html
		add_header Strict-Transport-Security "max-age=15552000; includeSubDomains"

  	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	  ssl_prefer_server_ciphers on;
	  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    root /var/www;
	  index index.html;

		location / {
	  	proxy_pass https://authorization-app;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection 'upgrade';
	    proxy_set_header Host $host;
	    proxy_cache_bypass $http_upgrade;
	  }
	}
	server {
	  listen 80;
		# TODO: This should really read a environmental variable
		server_name api.fjakkarin.com;
		return 301 https://$host$request_uri;
	}
}
